{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arya Agrawal\\\\Pictures\\\\medireach\\\\medireach-frontend\\\\src\\\\context\\\\Context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  doctor: JSON.parse(localStorage.getItem(\"doctor\")) || null,\n  isFetching: false,\n  error: false\n};\nexport const Context = /*#__PURE__*/createContext(INITIAL_STATE);\n_c = Context;\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE); // storing current logged in user in the local storage\n\n  useEffect(() => {\n    localStorage.setItem(\"doctor\", JSON.stringify(state.doctor));\n  }, [state.doctor]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      doctor: state.doctor,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n\n_c2 = ContextProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"ContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","Reducer","INITIAL_STATE","doctor","JSON","parse","localStorage","getItem","isFetching","error","Context","ContextProvider","children","state","dispatch","setItem","stringify"],"sources":["C:/Users/Arya Agrawal/Pictures/medireach/medireach-frontend/src/context/Context.js"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\n\nconst INITIAL_STATE = {\n  doctor: JSON.parse(localStorage.getItem(\"doctor\")) || null,\n  isFetching: false,\n  error: false,\n};\n\nexport const Context = createContext(INITIAL_STATE);\n\nexport const ContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\n\n  // storing current logged in user in the local storage\n  useEffect(() => {\n    localStorage.setItem(\"doctor\", JSON.stringify(state.doctor));\n  }, [state.doctor]);\n\n  return (\n    <Context.Provider\n      value={{\n        doctor: state.doctor,\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,aAAa,GAAG;EACpBC,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,KAA8C,IADlC;EAEpBC,UAAU,EAAE,KAFQ;EAGpBC,KAAK,EAAE;AAHa,CAAtB;AAMA,OAAO,MAAMC,OAAO,gBAAGZ,aAAa,CAACI,aAAD,CAA7B;KAAMQ,O;AAEb,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACC,OAAD,EAAUC,aAAV,CAApC,CAD+C,CAG/C;;EACAH,SAAS,CAAC,MAAM;IACdO,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA+BX,IAAI,CAACY,SAAL,CAAeH,KAAK,CAACV,MAArB,CAA/B;EACD,CAFQ,EAEN,CAACU,KAAK,CAACV,MAAP,CAFM,CAAT;EAIA,oBACE,QAAC,OAAD,CAAS,QAAT;IACE,KAAK,EAAE;MACLA,MAAM,EAAEU,KAAK,CAACV,MADT;MAELK,UAAU,EAAEK,KAAK,CAACL,UAFb;MAGLC,KAAK,EAAEI,KAAK,CAACJ,KAHR;MAILK;IAJK,CADT;IAAA,UAQGF;EARH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CApBM;;GAAMD,e;;MAAAA,e"},"metadata":{},"sourceType":"module"}